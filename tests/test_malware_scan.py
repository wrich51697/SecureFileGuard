# test_malware_scan.py
# Author: William Richmond
# Date: 2024-11-17
# Class: CYBR-260-45
# Assignment: Final Project
# Description: Unit tests for the malware scanning module of SecureFileGuard.

import unittest
import os
from src.malware_scan import scan_file, log_scan_results

class TestMalwareScan(unittest.TestCase):
    @classmethod
    def setUpClass(cls):
        """Setup for tests: define the test file path."""
        project_root = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
        cls.test_file = os.path.join(project_root, "resources", "sample1.txt")

        if not os.path.isfile(cls.test_file):
            raise FileNotFoundError(f"Test file not found: {cls.test_file}")

    def test_scan_clean_file(self):
        """Test scanning a clean file."""
        results = scan_file(self.test_file)
        self.assertEqual(results["status"], "clean")
        self.assertIsNone(results["threat"])
        print(f"Test clean file scan results: {results}")

    def test_log_scan_results(self):
        """Test logging of scan results."""
        results = {"file": self.test_file, "status": "clean", "threat": None}
        try:
            log_scan_results(self.test_file, results)
            print("Log scan results test passed.")
        except Exception as e:
            self.fail(f"Log scan results failed: {e}")

if __name__ == "__main__":
    unittest.main()
